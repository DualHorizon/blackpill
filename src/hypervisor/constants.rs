pub(crate) const MSR_IA32_VMX_BASIC: u32 = 0x480;
pub(crate) const MSR_IA32_VMX_PINBASED_CTLS: u32 = 0x481;
pub(crate) const MSR_IA32_VMX_PROCBASED_CTLS: u32 = 0x482;
pub(crate) const MSR_IA32_VMX_EXIT_CTLS: u32 = 0x483;
pub(crate) const MSR_IA32_VMX_ENTRY_CTLS: u32 = 0x484;
pub(crate) const MSR_FS_BASE: u32 = 0xc0000100;
pub(crate) const MSR_GS_BASE: u32 = 0xc0000101;
pub(crate) const MSR_IA32_SYSENTER_CS: u32 = 0x174;
pub(crate) const MSR_IA32_SYSENTER_ESP: u32 = 0x175;
pub(crate) const MSR_IA32_SYSENTER_EIP: u32 = 0x176;

pub(crate) const X86_CR4_VMXE: u64 = 1 << 13;

pub(crate) const PIN_BASED_VM_EXEC_CONTROL: u64 = 0x4000;
pub(crate) const CPU_BASED_VM_EXEC_CONTROL: u64 = 0x4002;
pub(crate) const VM_EXIT_CONTROLS: u64 = 0x400c;
pub(crate) const VM_ENTRY_CONTROLS: u64 = 0x4012;
pub(crate) const EXCEPTION_BITMAP: u64 = 0x4004;
pub(crate) const PAGE_FAULT_ERROR_CODE_MASK: u64 = 0x4006;
pub(crate) const PAGE_FAULT_ERROR_CODE_MATCH: u64 = 0x4008;
pub(crate) const CR3_TARGET_COUNT: u64 = 0x400a;

pub(crate) const HOST_CR0: u64 = 0x6c00;
pub(crate) const HOST_CR3: u64 = 0x6c02;
pub(crate) const HOST_CR4: u64 = 0x6c04;
pub(crate) const HOST_ES_SELECTOR: u64 = 0xc00;
pub(crate) const HOST_CS_SELECTOR: u64 = 0xc02;
pub(crate) const HOST_SS_SELECTOR: u64 = 0xc04;
pub(crate) const HOST_DS_SELECTOR: u64 = 0xc06;
pub(crate) const HOST_FS_SELECTOR: u64 = 0xc08;
pub(crate) const HOST_GS_SELECTOR: u64 = 0xc0a;
pub(crate) const HOST_TR_SELECTOR: u64 = 0xc0c;
pub(crate) const HOST_FS_BASE: u64 = 0x6c06;
pub(crate) const HOST_GS_BASE: u64 = 0x6c08;
pub(crate) const HOST_TR_BASE: u64 = 0x6c0a;
pub(crate) const HOST_GDTR_BASE: u64 = 0x6c0c;
pub(crate) const HOST_IDTR_BASE: u64 = 0x6c0e;
pub(crate) const HOST_IA32_SYSENTER_ESP: u64 = 0x6c10;
pub(crate) const HOST_IA32_SYSENTER_EIP: u64 = 0x6c12;
pub(crate) const HOST_IA32_SYSENTER_CS: u64 = 0x4c00;
pub(crate) const HOST_RIP: u64 = 0x6c16;

pub(crate) const GUEST_CR0: u64 = 0x6800;
pub(crate) const GUEST_CR3: u64 = 0x6802;
pub(crate) const GUEST_CR4: u64 = 0x6804;
pub(crate) const GUEST_ES_SELECTOR: u64 = 0x800;
pub(crate) const GUEST_CS_SELECTOR: u64 = 0x802;
pub(crate) const GUEST_SS_SELECTOR: u64 = 0x804;
pub(crate) const GUEST_DS_SELECTOR: u64 = 0x806;
pub(crate) const GUEST_FS_SELECTOR: u64 = 0x808;
pub(crate) const GUEST_GS_SELECTOR: u64 = 0x80a;
pub(crate) const GUEST_LDTR_SELECTOR: u64 = 0x80c;
pub(crate) const GUEST_TR_SELECTOR: u64 = 0x80e;
pub(crate) const GUEST_ES_BASE: u64 = 0x6806;
pub(crate) const GUEST_CS_BASE: u64 = 0x6808;
pub(crate) const GUEST_SS_BASE: u64 = 0x680a;
pub(crate) const GUEST_DS_BASE: u64 = 0x680c;
pub(crate) const GUEST_FS_BASE: u64 = 0x680e;
pub(crate) const GUEST_GS_BASE: u64 = 0x6810;
pub(crate) const GUEST_LDTR_BASE: u64 = 0x6812;
pub(crate) const GUEST_TR_BASE: u64 = 0x6814;
pub(crate) const GUEST_RFLAGS: u64 = 0x6820;
pub(crate) const GUEST_RSP: u64 = 0x681c;
pub(crate) const GUEST_RIP: u64 = 0x681e;
pub(crate) const GUEST_INTERRUPTIBILITY_INFO: u64 = 0x4824;
pub(crate) const GUEST_ACTIVITY_STATE: u64 = 0x4826;
pub(crate) const VMCS_LINK_POINTER: u64 = 0x2800;

pub(crate) const VM_EXIT_REASON: u64 = 0x4402;
pub(crate) const VM_EXIT_INSTRUCTION_LENGTH: u64 = 0x440c;
pub(crate) const EXIT_REASON_CPUID: u32 = 10;
pub(crate) const EXIT_REASON_VMCALL: u32 = 18;
